package com.cn.speedchat.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.cn.speedchat.greendao.MqttChatEntity;
import com.cn.speedchat.greendao.SessionEntity;
import com.cn.speedchat.greendao.UserEntity;

import com.cn.speedchat.greendao.MqttChatEntityDao;
import com.cn.speedchat.greendao.SessionEntityDao;
import com.cn.speedchat.greendao.UserEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig mqttChatEntityDaoConfig;
    private final DaoConfig sessionEntityDaoConfig;
    private final DaoConfig userEntityDaoConfig;

    private final MqttChatEntityDao mqttChatEntityDao;
    private final SessionEntityDao sessionEntityDao;
    private final UserEntityDao userEntityDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        mqttChatEntityDaoConfig = daoConfigMap.get(MqttChatEntityDao.class).clone();
        mqttChatEntityDaoConfig.initIdentityScope(type);

        sessionEntityDaoConfig = daoConfigMap.get(SessionEntityDao.class).clone();
        sessionEntityDaoConfig.initIdentityScope(type);

        userEntityDaoConfig = daoConfigMap.get(UserEntityDao.class).clone();
        userEntityDaoConfig.initIdentityScope(type);

        mqttChatEntityDao = new MqttChatEntityDao(mqttChatEntityDaoConfig, this);
        sessionEntityDao = new SessionEntityDao(sessionEntityDaoConfig, this);
        userEntityDao = new UserEntityDao(userEntityDaoConfig, this);

        registerDao(MqttChatEntity.class, mqttChatEntityDao);
        registerDao(SessionEntity.class, sessionEntityDao);
        registerDao(UserEntity.class, userEntityDao);
    }
    
    public void clear() {
        mqttChatEntityDaoConfig.getIdentityScope().clear();
        sessionEntityDaoConfig.getIdentityScope().clear();
        userEntityDaoConfig.getIdentityScope().clear();
    }

    public MqttChatEntityDao getMqttChatEntityDao() {
        return mqttChatEntityDao;
    }

    public SessionEntityDao getSessionEntityDao() {
        return sessionEntityDao;
    }

    public UserEntityDao getUserEntityDao() {
        return userEntityDao;
    }

}
